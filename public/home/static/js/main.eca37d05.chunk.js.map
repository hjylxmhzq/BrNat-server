{"version":3,"sources":["connect.svg","App.js","reportWebVitals.js","index.js"],"names":["browserInfo","browser","App","useState","token","changeToken","showToken","toggleToken","showModal","toggleModal","username","changeUsername","submitted","changeSubmitStatus","console","log","useEffect","setTimeout","className","title","style","top","visible","footer","type","onClick","fetch","method","body","JSON","stringify","user","headers","then","response","json","content","data","message","info","arrowPointAtCenter","placeholder","prefix","UserOutlined","onChange","e","target","value","src","connectIco","alt","QuestionOutlined","fontSize","color","verticalAlign","EyeOutlined","paddingLeft","cursor","EyeInvisibleOutlined","os","href","toLowerCase","includes","rel","mobile","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8NAAe,MAA0B,oC,iGCOnCA,EAAcC,cAwFLC,MAvFf,WAAgB,IAAD,EACgBC,mBAAS,IADzB,mBACNC,EADM,KACCC,EADD,OAEoBF,oBAAS,GAF7B,mBAENG,EAFM,KAEKC,EAFL,OAGoBJ,oBAAS,GAH7B,mBAGNK,EAHM,KAGKC,EAHL,OAIsBN,mBAAS,IAJ/B,mBAINO,EAJM,KAIIC,EAJJ,OAK2BR,oBAAS,GALpC,mBAKNS,EALM,KAKKC,EALL,KAiCb,OA3BAC,QAAQC,IAAIP,GACZQ,qBAAU,WACRC,YAAW,WACTZ,EAAY,6BACX,OACF,IAuBD,sBAAKa,UAAU,MAAf,UACE,eAAC,IAAD,CACEC,MAAM,2BACNC,MAAO,CAAEC,IAAK,IACdC,QAASd,EACTe,OAAQ,CACN,cAAC,IAAD,CAAqBC,KAAK,UAAUC,QAhB5C,WACEX,QAAQC,IAAIL,GACRA,GACFD,GAAY,GAddiB,MAAM,cAAe,CACnBC,OAAQ,OAAQC,KAAMC,KAAKC,UAAU,CAAEC,KAAMrB,IAAasB,QAAS,CACjE,eAAgB,sBAEjBC,MAAK,SAAAC,GACN,OAAOA,EAASC,UACfF,MAAK,SAAAG,GACN/B,EAAY+B,EAAQC,KAAKjC,OACzBS,GAAmB,OASnByB,IAAQC,KAAK,+CAUT,yBAAY,WALhB,UAUE,6IAAqB,cAAC,IAAD,CAASpB,MAAM,iFAAgBqB,oBAAkB,EAAjD,SAAkD,mEACvE,cAAC,IAAD,CAAOC,YAAY,qBAAMC,OAAQ,cAACC,EAAA,EAAD,IAAkBC,SAAU,SAAAC,GAAC,OAAIlC,EAAekC,EAAEC,OAAOC,QAAQA,MAAOrC,OAE3G,yBAAQQ,UAAU,aAAlB,UACE,qBAAK8B,IAAKC,EAAY/B,UAAU,WAAWgC,IAAI,SAE7CtC,EAAY,oBAAGM,UAAU,cAAb,+BAEZ,cAAC,IAAD,CAASC,MAAM,gFAAoBqB,oBAAkB,EAArD,SACI,cAACW,EAAA,EAAD,CAAkB/B,MAAO,CAAEgC,SAAU,OAAQC,MAAO,OAAQC,cAAe,WAHnE,2BAKPhD,EAAYF,EAAQ,aAErBE,EACE,cAACiD,EAAA,EAAD,CACEnC,MAAO,CAAEgC,SAAU,OAAQC,MAAO,OAAQC,cAAe,MAAOE,YAAa,EAAGC,OAAQ,WACxFhC,QAAS,kBAAMlB,GAAaD,MAC5B,cAACoD,EAAA,EAAD,CACAtC,MAAO,CAAEgC,SAAU,OAAQC,MAAO,OAAQC,cAAe,MAAOE,YAAa,EAAGC,OAAQ,WACxFhC,QAAS,kBAAMlB,GAAaD,SAE7B,mBAAGY,UAAU,cAAb,sFAKT,oBAAGA,UAAU,UAAb,2CAA6BlB,EAAY2D,GAAG,mBAAGzC,UAAU,iBAAiB0C,KAAK,qDAAqDd,OAAO,SAA/F,yCAC5C,mBACE5B,UAAU,WACV0C,KAAM5D,EAAY2D,GAAGE,cAAcC,SAAS,MAC1C,iCACA,uCACFhB,OAAO,SACPiB,IAAI,sBANN,SAQG/D,EAAYgE,OAAS,+DAAe,oCC5EhCC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBlC,MAAK,YAAkD,IAA/CmC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.eca37d05.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/connect.6bef4b8a.svg\";","import connectIco from './connect.svg';\nimport './App.css';\nimport { Modal, Input, Tooltip, Button, message } from 'antd';\nimport { UserOutlined, QuestionOutlined, EyeInvisibleOutlined, EyeOutlined } from '@ant-design/icons';\nimport browser from 'browser-detect';\nimport { useEffect, useState } from 'react';\n\nconst browserInfo = browser();\nfunction App() {\n  const [token, changeToken] = useState('');\n  const [showToken, toggleToken] = useState(false);\n  const [showModal, toggleModal] = useState(true);\n  const [username, changeUsername] = useState('');\n  const [submitted, changeSubmitStatus] = useState(false);\n  console.log(showModal)\n  useEffect(function () {\n    setTimeout(() => {\n      changeToken('eiAF1312huaifhASDFewh6u');\n    }, 200);\n  }, []);\n  function getNewToken() {\n    fetch('/getmytoken', {\n      method: 'POST', body: JSON.stringify({ user: username }), headers: {\n        'content-type': 'application/json'\n      },\n    }).then(response => {\n      return response.json();\n    }).then(content => {\n      changeToken(content.data.token);\n      changeSubmitStatus(true);\n    })\n  }\n  function onSubmitUsername() {\n    console.log(username)\n    if (username) {\n      toggleModal(false);\n      getNewToken();\n    } else {\n      message.info('用户名不能为空');\n    }\n  }\n  return (\n    <div className=\"App\">\n      <Modal\n        title=\"只需一步\"\n        style={{ top: 20 }}\n        visible={showModal}\n        footer={[\n          <Button key=\"submit\" type=\"primary\" onClick={onSubmitUsername}>\n            确认\n          </Button>,\n        ]}\n      >\n        <p>请输入你想使用的用户名，这将作为你的<Tooltip title=\"这是区分你与其它用户的标识\" arrowPointAtCenter><strong>连接标识</strong></Tooltip></p>\n        <Input placeholder=\"用户名\" prefix={<UserOutlined />} onChange={e => changeUsername(e.target.value)} value={username} />\n      </Modal>\n      <header className=\"App-header\">\n        <img src={connectIco} className=\"App-logo\" alt=\"logo\" />\n        {\n          submitted ? <p className=\"token-title\">\n            你的 Token\n          <Tooltip title=\"token是创建与服务器连接的凭据\" arrowPointAtCenter>\n              <QuestionOutlined style={{ fontSize: '10px', color: '#08c', verticalAlign: 'top' }} />\n            </Tooltip>\n          已创建：{showToken ? token : '**********'}\n            {\n              showToken ?\n                <EyeOutlined\n                  style={{ fontSize: '12px', color: '#08c', verticalAlign: 'top', paddingLeft: 5, cursor: 'pointer' }}\n                  onClick={() => toggleToken(!showToken)} />\n                : <EyeInvisibleOutlined\n                  style={{ fontSize: '12px', color: '#08c', verticalAlign: 'top', paddingLeft: 5, cursor: 'pointer' }}\n                  onClick={() => toggleToken(!showToken)} />\n            }\n          </p> : <p className=\"token-title\">\n              Token 未创建，请先设置用户名\n            </p>\n        }\n\n        <p className=\"os-name\">操作系统：{browserInfo.os}<a className=\"other-versions\" href=\"https://github.com/hjylxmhzq/BrNat-client/releases\" target=\"_blank\">其它版本</a></p>\n        <a\n          className=\"App-link\"\n          href={browserInfo.os.toLowerCase().includes('os') ?\n            \"/assets/Easy-Online Client.dmg\" :\n            \"/assets/Easy-Online Client Setup.exe\"}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          {browserInfo.mobile ? '不支持移动端操作系统' : '开始使用'}\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}