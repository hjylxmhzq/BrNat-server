{"version":3,"sources":["connect.svg","App.js","reportWebVitals.js","index.js"],"names":["browserInfo","browser","App","useState","token","changeToken","showToken","toggleToken","showModal","toggleModal","username","changeUsername","submitted","changeSubmitStatus","console","log","useEffect","setTimeout","className","title","style","top","visible","footer","type","onClick","fetch","method","body","JSON","stringify","user","headers","then","response","json","content","data","message","info","arrowPointAtCenter","placeholder","prefix","UserOutlined","onChange","e","target","value","src","connectIco","alt","QuestionOutlined","fontSize","color","verticalAlign","EyeOutlined","paddingLeft","cursor","EyeInvisibleOutlined","os","href","toLowerCase","includes","rel","mobile","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8NAAe,MAA0B,oC,iGCOnCA,EAAcC,cAwFLC,MAvFf,WAAgB,IAAD,EACgBC,mBAAS,IADzB,mBACNC,EADM,KACCC,EADD,OAEoBF,oBAAS,GAF7B,mBAENG,EAFM,KAEKC,EAFL,OAGoBJ,oBAAS,GAH7B,mBAGNK,EAHM,KAGKC,EAHL,OAIsBN,mBAAS,IAJ/B,mBAINO,EAJM,KAIIC,EAJJ,OAK2BR,oBAAS,GALpC,mBAKNS,EALM,KAKKC,EALL,KAiCb,OA3BAC,QAAQC,IAAIP,GACZQ,qBAAU,WACRC,YAAW,WACTZ,EAAY,6BACX,OACF,IAuBD,sBAAKa,UAAU,MAAf,UACE,eAAC,IAAD,CACEC,MAAM,2BACNC,MAAO,CAAEC,IAAK,IACdC,QAASd,EACTe,OAAQ,CACN,cAAC,IAAD,CAAqBC,KAAK,UAAUC,QAhB5C,WACEX,QAAQC,IAAIL,GACRA,GACFD,GAAY,GAddiB,MAAM,cAAe,CACnBC,OAAQ,OAAQC,KAAMC,KAAKC,UAAU,CAAEC,KAAMrB,IAAasB,QAAS,CACjE,eAAgB,sBAEjBC,MAAK,SAAAC,GACN,OAAOA,EAASC,UACfF,MAAK,SAAAG,GACN/B,EAAY+B,EAAQC,KAAKjC,OACzBS,GAAmB,OASnByB,IAAQC,KAAK,+CAUT,yBAAY,WALhB,UAUE,6IAAqB,cAAC,IAAD,CAASpB,MAAM,iFAAgBqB,oBAAkB,EAAjD,SAAkD,mEACvE,cAAC,IAAD,CAAOC,YAAY,qBAAMC,OAAQ,cAACC,EAAA,EAAD,IAAkBC,SAAU,SAAAC,GAAC,OAAIlC,EAAekC,EAAEC,OAAOC,QAAQA,MAAOrC,OAE3G,yBAAQQ,UAAU,aAAlB,UACE,qBAAK8B,IAAKC,EAAY/B,UAAU,WAAWgC,IAAI,SAE7CtC,EAAY,oBAAGM,UAAU,cAAb,+BAEZ,cAAC,IAAD,CAASC,MAAM,gFAAoBqB,oBAAkB,EAArD,SACI,cAACW,EAAA,EAAD,CAAkB/B,MAAO,CAAEgC,SAAU,OAAQC,MAAO,OAAQC,cAAe,WAHnE,2BAKPhD,EAAYF,EAAQ,aAErBE,EACE,cAACiD,EAAA,EAAD,CACEnC,MAAO,CAAEgC,SAAU,OAAQC,MAAO,OAAQC,cAAe,MAAOE,YAAa,EAAGC,OAAQ,WACxFhC,QAAS,kBAAMlB,GAAaD,MAC5B,cAACoD,EAAA,EAAD,CACAtC,MAAO,CAAEgC,SAAU,OAAQC,MAAO,OAAQC,cAAe,MAAOE,YAAa,EAAGC,OAAQ,WACxFhC,QAAS,kBAAMlB,GAAaD,SAE7B,mBAAGY,UAAU,cAAb,sFAKT,oBAAGA,UAAU,UAAb,2CAA6BlB,EAAY2D,GAAG,mBAAGzC,UAAU,iBAAiB0C,KAAK,qDAAqDd,OAAO,SAA/F,yCAC5C,mBACE5B,UAAU,WACV0C,KAAM5D,EAAY2D,GAAGE,cAAcC,SAAS,MAC1C,2BACA,2BACFhB,OAAO,SACPiB,IAAI,sBANN,SAQG/D,EAAYgE,OAAS,+DAAe,oCC5EhCC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBlC,MAAK,YAAkD,IAA/CmC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.16a5d7d3.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/connect.6bef4b8a.svg\";","import connectIco from './connect.svg';\r\nimport './App.css';\r\nimport { Modal, Input, Tooltip, Button, message } from 'antd';\r\nimport { UserOutlined, QuestionOutlined, EyeInvisibleOutlined, EyeOutlined } from '@ant-design/icons';\r\nimport browser from 'browser-detect';\r\nimport { useEffect, useState } from 'react';\r\n\r\nconst browserInfo = browser();\r\nfunction App() {\r\n  const [token, changeToken] = useState('');\r\n  const [showToken, toggleToken] = useState(false);\r\n  const [showModal, toggleModal] = useState(true);\r\n  const [username, changeUsername] = useState('');\r\n  const [submitted, changeSubmitStatus] = useState(false);\r\n  console.log(showModal)\r\n  useEffect(function () {\r\n    setTimeout(() => {\r\n      changeToken('eiAF1312huaifhASDFewh6u');\r\n    }, 200);\r\n  }, []);\r\n  function getNewToken() {\r\n    fetch('/getmytoken', {\r\n      method: 'POST', body: JSON.stringify({ user: username }), headers: {\r\n        'content-type': 'application/json'\r\n      },\r\n    }).then(response => {\r\n      return response.json();\r\n    }).then(content => {\r\n      changeToken(content.data.token);\r\n      changeSubmitStatus(true);\r\n    })\r\n  }\r\n  function onSubmitUsername() {\r\n    console.log(username)\r\n    if (username) {\r\n      toggleModal(false);\r\n      getNewToken();\r\n    } else {\r\n      message.info('用户名不能为空');\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"App\">\r\n      <Modal\r\n        title=\"只需一步\"\r\n        style={{ top: 20 }}\r\n        visible={showModal}\r\n        footer={[\r\n          <Button key=\"submit\" type=\"primary\" onClick={onSubmitUsername}>\r\n            确认\r\n          </Button>,\r\n        ]}\r\n      >\r\n        <p>请输入你想使用的用户名，这将作为你的<Tooltip title=\"这是区分你与其它用户的标识\" arrowPointAtCenter><strong>连接标识</strong></Tooltip></p>\r\n        <Input placeholder=\"用户名\" prefix={<UserOutlined />} onChange={e => changeUsername(e.target.value)} value={username} />\r\n      </Modal>\r\n      <header className=\"App-header\">\r\n        <img src={connectIco} className=\"App-logo\" alt=\"logo\" />\r\n        {\r\n          submitted ? <p className=\"token-title\">\r\n            你的 Token\r\n          <Tooltip title=\"token是创建与服务器连接的凭据\" arrowPointAtCenter>\r\n              <QuestionOutlined style={{ fontSize: '10px', color: '#08c', verticalAlign: 'top' }} />\r\n            </Tooltip>\r\n          已创建：{showToken ? token : '**********'}\r\n            {\r\n              showToken ?\r\n                <EyeOutlined\r\n                  style={{ fontSize: '12px', color: '#08c', verticalAlign: 'top', paddingLeft: 5, cursor: 'pointer' }}\r\n                  onClick={() => toggleToken(!showToken)} />\r\n                : <EyeInvisibleOutlined\r\n                  style={{ fontSize: '12px', color: '#08c', verticalAlign: 'top', paddingLeft: 5, cursor: 'pointer' }}\r\n                  onClick={() => toggleToken(!showToken)} />\r\n            }\r\n          </p> : <p className=\"token-title\">\r\n              Token 未创建，请先设置用户名\r\n            </p>\r\n        }\r\n\r\n        <p className=\"os-name\">操作系统：{browserInfo.os}<a className=\"other-versions\" href=\"https://github.com/hjylxmhzq/BrNat-client/releases\" target=\"_blank\">其它版本</a></p>\r\n        <a\r\n          className=\"App-link\"\r\n          href={browserInfo.os.toLowerCase().includes('os') ?\r\n            \"/assets/BrNat-Client.dmg\" :\r\n            \"/assets/BrNat-Client.exe\"}\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          {browserInfo.mobile ? '不支持移动端操作系统' : '开始使用'}\r\n        </a>\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}